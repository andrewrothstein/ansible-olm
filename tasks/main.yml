---
- name: Installing andrewrothstein.unarchivedeps
  ansible.builtin.include_role:
    name: andrewrothstein.unarchivedeps
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Looking for install at {{ olm_install_dir }}
  become: true
  ansible.builtin.stat:
    path: '{{ olm_install_dir }}'
  changed_when: false
  register: olm_binary
- name: Downloading and installing olm
  when: not olm_binary.stat.exists
  block:
    - name: Downloading {{ olm_url }} to {{ olm_tmp_archive }}
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ olm_url }}'
        dest: '{{ olm_tmp_archive }}'
        checksum: '{{ olm_checksum }}'
        mode: '644'
    - name: Mkdir {{ olm_install_dir }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ olm_install_dir }}'
        state: directory
        mode: '755'
    - name: Unarchiving {{ olm_tmp_archive }} into {{ olm_install_dir }}
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ olm_tmp_archive }}'
        dest: '{{ olm_install_dir }}'
        creates: '{{ olm_install_dir }}/olm'
  always:
    - name: Rm {{ olm_tmp_archive }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ olm_tmp_archive }}'
        state: absent
- name: Linking exes in {{ olm_install_dir }} to {{ olm_parent_install_dir }}/bin...
  become: true
  become_user: root
  with_items: '{{ olm_exes }}'
  ansible.builtin.file:
    src: '{{ olm_install_dir }}/{{ item }}'
    dest: '{{ olm_parent_install_dir }}/bin/{{ item }}'
    state: link
